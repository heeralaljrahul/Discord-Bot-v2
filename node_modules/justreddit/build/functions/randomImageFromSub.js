"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const randomPostFromSub_1 = require("./randomPostFromSub");
function getImageFromGalleryPost(post) {
    var _a, _b;
    const images = Object.values((_a = post.raw) === null || _a === void 0 ? void 0 : _a.media_metadata).filter((image) => image.status === "valid");
    return (_b = images[Math.floor(Math.random() * images.length)]) === null || _b === void 0 ? void 0 : _b.s.u.replace(/&amp;/g, "&");
}
async function randomImageFromSub({ subReddit, sortType = "top", maxTries = 15, postGetLimit = 10 }) {
    var _a, _b, _c;
    let post = null;
    let tries = 0;
    while (typeof post !== null && tries <= maxTries) {
        const randomPost = await (0, randomPostFromSub_1.default)({ subReddit, sortType, postGetLimit, excludeRaw: false });
        if (typeof ((_a = randomPost.raw) === null || _a === void 0 ? void 0 : _a.url) === "string" && ((_b = randomPost.raw) === null || _b === void 0 ? void 0 : _b.url.length) > 0 && /\.(jpe?g|png|gif|bmp)$/i.test((_c = randomPost.raw) === null || _c === void 0 ? void 0 : _c.url) === true) {
            post = randomPost;
            break;
        }
        tries++;
    }
    if (post === null)
        return "https://via.placeholder.com/150";
    if ((post === null || post === void 0 ? void 0 : post.raw.is_gallery) === true)
        return getImageFromGalleryPost(post);
    return post === null || post === void 0 ? void 0 : post.raw.url.replace("gifv", "gif");
}
exports.default = randomImageFromSub;
